@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
    @font-face {
        font-family: '#{$font-family}';
        font-weight: #{$weight};
        font-style: '#{$style}';
        src: url('#{$url}.eot');
        src: url('#{$url}.eot?#iefix') format('embedded-opentype'), // url('#{$url}.woff') format('woff'),
        url('#{$url}.otf') format('opentype');
        // url('#{$url}.ttf') format('truetype');
    }
}

@function strip-unit($number) {
    @if type-of($number)=='number' and not unitless($number) {
        @return $number / ($number * 0+1);
    }
    @return $number;
}

// Function for converting a px based font-size to rem.
@function rem($size) {
    $remSize: $size / 14px;
    @return #{$remSize}rem;
}

@mixin fields($size) {
    padding-left: $size;
    padding-right: $size;
}

@mixin line-height-in-em($fz,
$lh) {
    font-size: $fz;
    line-height: #{strip-unit($lh) * 100 / strip-unit($fz) / 100}em;
}